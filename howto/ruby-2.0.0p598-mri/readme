
++ HOWTO: INSTALL ON OSX YOSEMITE ++

  Pre-requisites:
    rvm installed
    homebrew installed

  Summary:
    1. Install berkeley-db  (via brew)
    1a Install the dbd gem  (optional)
    2. Install the tuple gem
    3. Install opencv       (via brew)
    4. perform 'bundle' to install all the gems

  ++ INSTALL BERKELEY-DB ++

  The bdb gem currently supports only berkeley-db ver. <= 5.1
  but the typing "brew install berkeley-db" will install the version 5.3+.

  We need to move to our homebrew folder and temporary replace the content of .Library/Formula/berkeley-db.rb with:

require 'formula'

class BerkeleyDb < Formula
  homepage 'http://www.oracle.com/technology/products/berkeley-db/index.html'
  url 'http://download.oracle.com/berkeley-db/db-5.1.19.tar.gz'

  option 'with-java', 'Compile with Java support.'
  option 'enable-sql', 'Compile with SQL support.'

  # Fix build under Xcode 4.6
  # Double-underscore names are reserved, and __atomic_compare_exchange is now
  # a built-in, so rename this to something non-conflicting.
  def patches; DATA; end

  def install
    # BerkeleyDB dislikes parallel builds
    ENV.deparallelize
    # --enable-compat185 is necessary because our build shadows
    # the system berkeley db 1.x
    args = %W[
      --disable-debug
      --prefix=#{prefix}
      --mandir=#{man}
      --enable-cxx
      --enable-compat185
    ]
    args << "--enable-java" if build.include? "with-java"
    args << "--enable-sql" if build.include? "enable-sql"

    # BerkeleyDB requires you to build everything from the build_unix subdirectory
    cd 'build_unix' do
      system "../dist/configure", *args
      system "make install"

      # use the standard docs location
      doc.parent.mkpath
      mv prefix/'docs', doc
    end
  end
end

__END__
diff --git a/src/dbinc/atomic.h b/src/dbinc/atomic.h
index 096176a..561037a 100644
--- a/src/dbinc/atomic.h
+++ b/src/dbinc/atomic.h
@@ -144,7 +144,7 @@ typedef LONG volatile *interlocked_val;
 #define	atomic_inc(env, p)	__atomic_inc(p)
 #define	atomic_dec(env, p)	__atomic_dec(p)
 #define	atomic_compare_exchange(env, p, o, n)	\
-	__atomic_compare_exchange((p), (o), (n))
+	__atomic_compare_exchange_db((p), (o), (n))
 static inline int __atomic_inc(db_atomic_t *p)
 {
 	int	temp;
@@ -176,7 +176,7 @@ static inline int __atomic_dec(db_atomic_t *p)
  * http://gcc.gnu.org/onlinedocs/gcc-4.1.0/gcc/Atomic-Builtins.html
  * which configure could be changed to use.
  */
-static inline int __atomic_compare_exchange(
+static inline int __atomic_compare_exchange_db(
 	db_atomic_t *p, atomic_value_t oldval, atomic_value_t newval)
 {
 	atomic_value_t was;


  At this point, you can use the command "brew install berkeley-db" to install the version 5.1.29 of berkeley-db.

  This could take a while.

  Once installed perform a 'git stash' on the hombrew repo to undo the changes to the formula


  ++ INSTALL THE BDB GEM ++ (only if the homebrew is not installed system wide, otherwise skip this section)

  Now you can install the bdb gem with the commnad "gem install bdb -v 0.2.6.5". On my system, the last
  command failed because i have installed homebrew in a path different than its default.
  To install the bdb gem i followed these steps:

    * git clone https://github.com/ruby-bdb/bdb.git
    * cd bdb

    * edit ext/extconf.rb and add in the array at line 6 add your berkeley-db path, example:

      %w[/usr / /usr/local /usr/local/db* /usr/local/BerkeleyDB* /Users/topac/.homebrew/Cellar/berkeley-db/5.1.29*].each do |pdir|
        Dir[pdir].each do |dir|
          dir_config('db', "#{dir}/include", "#{dir}/lib")
        end
      end

    * touch Gemfile

      source "http://rubygems.org"
      gem "jeweler"

    * bundle install
    * clean up the Rakefile removing the part under require 'rake/rdoctask' (is deprecated now)
    * change the version number from 0.2.6 to 0.2.6.5
    * ensure that rake -T works
    * rake build
    * rake install pkg/bdb-0.2.6.5.gem


  ++ INSTALL THE TUPLE GEM ++

  Install the patched version of the tuple gem with "gem install tuple-0.1.2.gem" (found in this directory)


  ++ INSTALL OPENCV ++

  To install opencv we have to add the correct tap by issuing 'brew tap homebrew/science'
  the opencv can be installed with: 'brew install opencv'


  ++ FINAL INSTALL ++

  Once everything is read you can execute 'bundle' in the project directory and all the required gem will be installed